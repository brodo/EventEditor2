// Generated by CoffeeScript 1.7.1
(function() {
  var addEvent, createEvents, createSidebar, d3, eventList, getMainRect, getRectForSensorIndex, id;

  d3 = require('d3');

  window.d3 = d3;

  eventList = [];

  createEvents = function() {
    var drag, dragmove, events, eventsHtml, innerDiv;
    dragmove = function(d, i) {
      d.x = d3.event.x;
      d.y = d3.event.y;
      d3.select(this).attr("x", d.x).attr("y", d.y);
      return d3.select("#eventHtml-" + i).attr("x", d.x + 5).attr("y", d.y + 30);
    };
    drag = d3.behavior.drag().origin(id).on("drag", dragmove);
    events = d3.select('#svgMain').selectAll('.event').data(eventList);
    events.enter().append('rect').attr('class', 'event').attr('x', function(d) {
      return d.x;
    }).attr('y', function(d) {
      return d.y;
    }).attr('width', 250).attr('height', 250).attr('rx', "20").attr('ry', "20").call(drag).append('text').attr('x', 0).attr('y', 0).attr('class', 'eventTitle').text(function(d) {
      return d.displayName;
    });
    eventsHtml = d3.select('#svgMain').selectAll('.eventHtml').data(eventList);
    innerDiv = eventsHtml.enter().append('foreignObject').attr('id', function(d, i) {
      return "eventHtml-" + i;
    }).attr('class', 'eventHtml').attr('x', function(d) {
      return d.x + 5;
    }).attr('y', function(d) {
      return d.y + 30;
    }).attr('width', 245).attr('height', 200).append('xhtml:div').attr('class', 'eventInnerDiv');
    return innerDiv.append('input').attr('type', 'number');
  };

  addEvent = function(d, x, y) {
    d.x = x - getMainRect().left - 125;
    d.y = y - getMainRect().top - 125;
    eventList.push(d);
    return createEvents();
  };

  createSidebar = function(err, sensors) {
    var drag, dragmove, dragstart, dragstop;
    dragstart = function(d, i) {
      var rect;
      rect = getRectForSensorIndex(i);
      return d3.select('#sidebar').append('div').attr('class', 'eventType dragging').style('position', 'absolute').style('left', "" + rect.left + "px").style('top', "" + rect.top + "px").text(function() {
        return d.displayName;
      });
    };
    dragmove = function(d) {
      return d3.select('.dragging').style('left', "" + d3.event.x + "px").style('top', "" + d3.event.y + "px");
    };
    dragstop = function(d) {
      var element, source;
      d3.select('.dragging').remove();
      source = d3.event.sourceEvent;
      element = document.elementFromPoint(source.clientX, source.clientY);
      if (element.id === "svgMain") {
        return addEvent(d, source.clientX, source.clientY);
      }
    };
    drag = d3.behavior.drag().origin(id).on("drag", dragmove).on("dragstart", dragstart).on("dragend", dragstop);
    d3.select('#sidebar').selectAll('.eventType').data(sensors).enter().append('div').attr('class', 'eventType').attr('id', function(d, i) {
      return "eventType-" + i;
    }).text(function(d) {
      return d.displayName;
    }).call(drag);
    return d3.selectAll('.eventType').each(function(d, i) {
      var rect;
      rect = getRectForSensorIndex(i);
      d.x = rect.left;
      return d.y = rect.top;
    });
  };

  getRectForSensorIndex = function(index) {
    var currentElement;
    currentElement = d3.select("#eventType-" + index).node();
    return currentElement.getBoundingClientRect();
  };

  getMainRect = function() {
    return d3.select('#svgMain').node().getBoundingClientRect();
  };

  id = function(x) {
    return x;
  };

  createEvents();

  d3.json("http://localhost:8000/data/sensors.json", createSidebar);

}).call(this);
